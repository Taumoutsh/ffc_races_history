# Production Docker Compose Configuration
# For cloud deployment with optimized settings
version: '3.8'

services:
  # Main application service
  race-cycling-app:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: race-cycling-app-prod
    restart: unless-stopped
    
    # Environment variables
    environment:
      - NODE_ENV=production
      - DB_PATH=/app/data/cycling_data.db
      - API_PORT=3001
      - DEBUG=false
      - PYTHONPATH=/app
    
    # Port mapping
    ports:
      - "8080:80"    # Web interface
      - "3001:3001"  # API endpoint
    
    # Volume mounts for data persistence
    volumes:
      - cycling_data:/app/data
      - cycling_logs:/var/log/nginx
      - ./backups:/app/backups:rw
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Reverse proxy for production (optional)
  nginx-proxy:
    image: nginx:alpine
    container_name: race-cycling-nginx-prod
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./docker/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    
    depends_on:
      race-cycling-app:
        condition: service_healthy
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    
    # Only run with production profile
    profiles:
      - production
      - full-stack

  # Database backup service
  backup:
    image: alpine:latest
    container_name: race-cycling-backup
    restart: "no"
    
    volumes:
      - cycling_data:/data:ro
      - ./backups:/backups:rw
    
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
    
    command: |
      sh -c '
        apk add --no-cache sqlite
        while true; do
          echo "Creating backup..."
          timestamp=$$(date +%Y%m%d_%H%M%S)
          cp /data/cycling_data.db /backups/cycling_data_backup_$$timestamp.db
          # Keep only last 7 backups
          cd /backups && ls -t cycling_data_backup_*.db | tail -n +8 | xargs rm -f
          echo "Backup completed: cycling_data_backup_$$timestamp.db"
          sleep 86400  # Wait 24 hours
        done
      '
    
    profiles:
      - backup
      - full-stack

# Named volumes for data persistence
volumes:
  cycling_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  
  cycling_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
      
  nginx_cache:
    driver: local

# Network configuration
networks:
  default:
    name: race-cycling-network
    driver: bridge